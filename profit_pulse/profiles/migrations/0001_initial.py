# Generated by Django 2.0.5 on 2018-05-07 05:49

import profit_pulse.profiles.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('street_address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=40)),
                ('zip_code', models.CharField(blank=True, max_length=40)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text="+1-xxx-xxx-xxxx (int'l code required)", max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('business_name', models.CharField(max_length=255)),
                ('clinic_type', models.CharField(choices=[('orthopedics', 'Orthopedics'), ('podiatry', 'Podiatry'), ('pain_management', 'Pain Management'), ('opthalmology', 'Ophthalmology'), ('dermatology', 'Dermatology')], default='orthopedics', max_length=128)),
                ('portal_access', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            bases=(profit_pulse.profiles.mixins.ProfitMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Physician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Physician',
                'verbose_name_plural': 'Physicians',
            },
            bases=(profit_pulse.profiles.mixins.ProfitMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SalesRepresentative',
            fields=[
                ('street_address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=40)),
                ('zip_code', models.CharField(blank=True, max_length=40)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text="+1-xxx-xxx-xxxx (int'l code required)", max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='sales_representative', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('portal_access', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Sales Representative',
                'verbose_name_plural': 'Sales Representatives',
            },
            bases=(profit_pulse.profiles.mixins.ProfitMixin, models.Model),
        ),
        migrations.AddField(
            model_name='customer',
            name='sales_representative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='profiles.SalesRepresentative'),
        ),
    ]
