"""
Django settings for profit_pulse project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import environ
import os

env = environ.Env()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = environ.Path(__file__) - 3

try:
    env_file = str(ROOT_DIR.path('.env'))
    if os.path.isfile(env_file):
        print('Loading : {}'.format(env_file))
        env.read_env(env_file)
except Exception:
    pass


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DJANGO_DEBUG', False)

SECRET_KEY = env(
    'DJANGO_SECRET_KEY',
    default=''
)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'corsheaders',
    'phonenumber_field',
    'oauth2_provider',
    'rest_framework',
    'rest_framework_swagger',
    'rest_framework_xml',
    'storages',
    'haystack',
    'django_celery_beat',
    'django_celery_results',
    'django_filters',
    'reversion',
    'simple_history',

    # Local Apps
    'profit_pulse.users.apps.UsersConfig',
    'profit_pulse.core.apps.CoreConfig',
    'profit_pulse.dispense.apps.DispenseConfig',
    'profit_pulse.enrollment.apps.EnrollmentConfig',
    'profit_pulse.profiles.apps.ProfilesConfig',
    'profit_pulse.products.apps.ProductsConfig',
    'profit_pulse.switching_fees.apps.SwitchingFeesConfig',
    'profit_pulse.newsfeeds.apps.NewsFeedConfig',
    'profit_pulse.webhooks.apps.WebhooksConfig',
]

MIDDLEWARE = [
    # Make sure CorsMiddleware is at the top of this list
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'reversion.middleware.RevisionMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(ROOT_DIR('templates'))
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Custom user app
AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    # Uncomment following if you want to access the admin
    'django.contrib.auth.backends.ModelBackend',
)

LOGIN_URL = '/admin/login/'

# DJANGO REST FRAMEWORK
# --------------------------------------------------------------------------
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'profit_pulse.core.pagination.LimitZeroPageNumberPagination',
    'PAGE_SIZE': int(os.getenv('DJANGO_PAGINATION_LIMIT', 10)),
    'DATETIME_FORMAT': '%Y-%m-%dT%H:%M:%S%z',
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}

# REST AUTH
# --------------------------------------------------------------------------
OLD_PASSWORD_FIELD_ENABLED = env.bool('OLD_PASSWORD_FIELD_ENABLED', True)

# OAUTH 2 TOOLKIT SETTINGS
# --------------------------------------------------------------------------
OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'groups': 'Access to your groups'
    }
}

# DOCUSIGN
# --------------------------------------------------------------------------
DOCUSIGN_BASE_URL = env('DOCUSIGN_BASE_URL', default='')
DOCUSIGN_OAUTH_URL = env('DOCUSIGN_OAUTH_URL', default='')
DOCUSIGN_REDIRECT_URL = env('DOCUSIGN_REDIRECT_URL', default='')
DOCUSIGN_WEBHOOK_BASE_URL = env('DOCUSIGN_WEBHOOK_BASE_URL', default='')
DOCUSIGN_TEMPLATE_ID = env('DOCUSIGN_TEMPLATE_ID', default='')
DOCUSIGN_INSTIGATOR_KEY = env('DOCUSIGN_INSTIGATOR_KEY', default='')
DOCUSIGN_SECRET_KEY = env('DOCUSIGN_SECRET_KEY', default='')
DOCUSIGN_COMPANY_NAME = env('DOCUSIGN_COMPANY_NAME', default='APG Labs')
DOCUSIGN_USERNAME = env('DOCUSIGN_USERNAME', default='')
DOCUSIGN_USER_ID = env('DOCUSIGN_USER_ID', default='')

# DATABASE CONFIGURATION
# --------------------------------------------------------------------------
# See: https://docs.djangoproject.com/en/dev/ref/settings/#databases
if 'RDS_DB_NAME' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }
else:
    DATABASES = {
        'default': env.db('DATABASE_URL', default='postgres:///profit_pulse'),
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_ROOT = str(ROOT_DIR('staticfiles'))
STATIC_URL = '/static/'

MEDIA_ROOT = str(ROOT_DIR('media'))

# See: https://docs.djangoproject.com/en/dev/ref/settings/#media-url
MEDIA_URL = '/media/'


WEB_HOOK_HANDLERS = {

}

AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME', default='')
AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID', default='')
AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY', default='')
AWS_S3_BUCKET = env('AWS_S3_BUCKET', default='')
AWS_REGION = env('AWS_REGION', default='')
AWS_S3_BUCKET_DATA_SCAN = env('AWS_S3_BUCKET_DATA_SCAN', default='')
AWS_DEFAULT_REGION = env('AWS_DEFAULT_REGION', default='us-west-2')
AWS_SES_REGION_NAME = env('AWS_SES_REGION_NAME', default='us-west-2')
AWS_SES_REGION_ENDPOINT = env(
    'AWS_SES_REGION_ENDPOINT',
    default='email.us-west-2.amazonaws.com'
)


# PHONE NUMBER SETTINGS
# --------------------------------------------------------------------
PHONENUMBER_DEFAULT_REGION = 'US'
PHONENUMBER_DB_FORMAT = 'NATIONAL'


# EMAIL SETTINGS
# --------------------------------------------------------------------
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='')

# HAYSTACK SETTINGS
# --------------------------------------------------------------------
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# SENDGRID SETTINGS
# --------------------------------------------------------------------
EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"
SENDGRID_API_KEY = env(
    'SENDGRID_API_KEY',
    default=''
)
SENDGRID_SANDBOX_MODE_IN_DEBUG = env.bool(
    'SENDGRID_SANDBOX_MODE_IN_DEBUG',
    False
)
